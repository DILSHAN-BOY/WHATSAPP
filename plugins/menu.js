const { readEnv } = require('../lib/database');
const { cmd, commands } = require('../command');

cmd({
    pattern: "menu",
    react: "ðŸ‘¾",
    desc: "get cmd list",
    category: "main",
    filename: __filename
}, async (conn, mek, m, { from, pushname }) => {
    try {
        const config = await readEnv();

        const reply = (text) => conn.sendMessage(from, { text }, { quoted: mek });

        let menu = { main: '', download: '', group: '', owner: '', convert: '', search: '' };

        for (let i = 0; i < commands.length; i++) {
            const cat = commands[i].category || 'main';
            if (commands[i].pattern && !commands[i].dontAddCommandList) {
                if (!menu[cat]) menu[cat] = '';
                menu[cat] += `*â”‹* ${commands[i].pattern}\n`;
            }
        }

        let madeMenu = `*â•­â”€ AGNI MENU â”€â•®*\n*Hi ${pushname}*\n\n` +
            `*â•­â”€ DOWNLOAD CMDS â”€â•®*\n${menu.download}*â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€*\n` +
            `*â•­â”€ MAIN CMDS â”€â•®*\n${menu.main}*â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€*\n` +
            `*â•­â”€ GROUP CMDS â”€â•®*\n${menu.group}*â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€*\n` +
            `*â•­â”€ OWNER CMDS â”€â•®*\n${menu.owner}*â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€*\n` +
            `*â•­â”€ CONVERT CMDS â”€â•®*\n${menu.convert}*â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€*\n` +
            `*â•­â”€ SEARCH CMDS â”€â•®*\n${menu.search}*â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€*\n` +
            `> Powered by AGNI`;

        if (config.MENU_IMG) {
            await conn.sendMessage(from, { image: { url: config.MENU_IMG }, caption: madeMenu }, { quoted: mek });
        } else {
            reply(madeMenu);
        }

    } catch (e) {
        console.error(e);
        conn.sendMessage(from, { text: `Error: ${e.message}` }, { quoted: mek });
    }
});
